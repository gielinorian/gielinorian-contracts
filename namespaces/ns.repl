(enforce-pact-version "4.10")

(begin-tx "Define namespaces")
    (env-data
        {
            'ns-admin-keyset: ["ns-admin-keyset"],
            'ns-operate-keyset: ["ns-operate-keyset"]
        }
    )

    (env-sigs
        [
            {
                'key: "ns-admin-keyset", 'caps: []
            },
            {
                'key: "ns-operate-keyset", 'caps: []
            }
        ]
    )

    (env-exec-config ["DisablePact44"]); Makes it possible to define-keysets without a selected namespace
    (load "./root/ns.pact")
    (create-table registry)
    (env-exec-config [])

    (use ns)

    (write-registry "kadena" (keyset-ref-guard "ns-operate-keyset") true)
    (write-registry "free" GUARD_FAILURE true)
    (write-registry "kip" GUARD_FAILURE true)
    (write-registry "tools" GUARD_SUCCESS true)

    (define-namespace "kadena" (keyset-ref-guard "ns-operate-keyset") (keyset-ref-guard "ns-operate-keyset"))
    (define-namespace "free" GUARD_SUCCESS GUARD_FAILURE)
    (define-namespace "kip" GUARD_SUCCESS GUARD_FAILURE)
    (define-namespace "tools" GUARD_SUCCESS GUARD_SUCCESS)
(commit-tx)

(begin-tx "Load the root contracts")
    (env-keys [])
    (env-sigs [])

    (print "Initialize kip-0005")
    (load "./kips/kip-0005/fungible-v2.pact")

    (print "Initialize coin contract")
    (load "./root/gas-payer-v1.pact")
    (load "./root/fungible-xchain-v1.pact")
    (load "./root/coin.pact")

    ; Create tables for the coin-v5 contract
    (create-table coin-table)
    (create-table allocation-table)

    (print "Initialize marmalade-ng contracts")
    (load "./marmalade-ng/pact/policies/token-policy-ng-v1.pact")

(commit-tx)

(begin-tx "Load the free namespace")
    (namespace 'free)

    (print "Initialize pact-util-lib")
    (load "./pact-util-lib/pact/contracts/util-chain-data.pact")
    (load "./pact-util-lib/pact/contracts/util-fungible.pact")
    (load "./pact-util-lib/pact/contracts/util-lists.pact")
    (load "./pact-util-lib/pact/contracts/util-math.pact")
    (load "./pact-util-lib/pact/contracts/util-strings.pact")
    (load "./pact-util-lib/pact/contracts/util-random.pact")
    (load "./pact-util-lib/pact/contracts/util-time.pact")
    (load "./pact-util-lib/pact/contracts/util-zk.pact")
(commit-tx)

(begin-tx "Load the kip namespace")
    (namespace 'kip)
    (load "./kips/kip-0012/account-protocols-v1.pact")

    (print "Initialize marmalade kips")
    (load "./marmalade-ng/pact/kip/ng-poly-fungible-v1.pact")
(commit-tx)

(begin-tx "Load the Marmalade-NG namespace")
    (env-data
        {
            'admin_keyset: "marmalade-ng.admin",
            'marmalade-admin: ["marmalade-admin"],
            'marmalade-extra-policy: ["marmalade-extra-policy"],
            'lock-namespace: false,
            'extra_policies_admin_keyset: "marmalade-extra-policy"
        }
    )

    (env-sigs
        [
            {
                'key:"marmalade-admin", 'caps:[]
            }
        ]
    )

    (define-namespace 'marmalade-ng (read-keyset "marmalade-admin") (read-keyset "marmalade-admin"))
    (namespace 'marmalade-ng)

    (define-keyset "marmalade-ng.admin" (read-keyset "marmalade-admin"))

    (load "./marmalade-ng/pact/governance.pact")

    (define-namespace 'marmalade-ng (create-user-guard (governance.namespace-user-guard)) (create-user-guard (governance.namespace-user-guard)))

    (namespace 'marmalade-ng)
    ; Ledger
    (load "./marmalade-ng/pact/ledger.pact")
    (create-table ledger)
    (create-table tokens)

    ; Policy Util
    (load "./marmalade-ng/pact/utils/util-policies.pact")

    ; Policies
    (load "./marmalade-ng/pact/policies/policy-adjustable-royalty.pact")
    (create-table royalty-tokens)
    (create-table royalty-sales)


    (load "./marmalade-ng/pact/policies/policy-auction-sale.pact")
    (create-table auctions)

    (load "./marmalade-ng/pact/policies/policy-blacklist.pact")
    (create-table blacklist)
    (create-table tokens-blacklist)

    (load "./marmalade-ng/pact/policies/policy-collection.pact")
    (create-table collections)
    (create-table tokens)

    (load "./marmalade-ng/pact/policies/policy-disable-burn.pact")
    (load "./marmalade-ng/pact/policies/policy-disable-sale.pact")
    (load "./marmalade-ng/pact/policies/policy-disable-transfer.pact")

    (load "./marmalade-ng/pact/policies/policy-dutch-auction-sale.pact")
    (create-table quotes)

    (load "./marmalade-ng/pact/policies/policy-extra-policies.pact")
    (create-table global)
    (create-table tokens)
    (create-table sales)

    (load "./marmalade-ng/pact/policies/policy-fixed-issuance.pact")
    (create-table supplies)

    (load "./marmalade-ng/pact/policies/policy-fixed-sale.pact")
    (create-table quotes)

    (load "./marmalade-ng/pact/policies/policy-guards.pact")
    (create-table guards)

    (load "./marmalade-ng/pact/policies/policy-instant-mint.pact")
    (create-table instant-mint)

    (load "./marmalade-ng/pact/policies/policy-marketplace.pact")
    (create-table marketplace-sales)

    (load "./marmalade-ng/pact/policies/policy-non-fungible.pact")

    (load "./marmalade-ng/pact/policies/policy-royalty.pact")
    (create-table royalty-tokens)

    (load "./marmalade-ng/pact/policies/policy-trusted-custody.pact")
    (create-table tokens-custody)
    (create-table accounts-custody)

    (load "./marmalade-ng/pact/policies/token-policy-ng-v1.pact")

    ; Utils
    (load "./marmalade-ng/pact/utils/std-policies.pact")
(commit-tx)

(begin-tx "Load the tools namespace")
    (namespace 'tools)
    (load "./tools/event-store.pact")
(commit-tx)